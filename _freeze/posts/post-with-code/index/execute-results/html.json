{
  "hash": "cb215ac447ed1bd5ff930ed4e9e640b2",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Explorando Netflix\"\nsubtitle: \"Explorando que hay detras de Netflix\"\nauthor: \"Guille Ferchero\"\ndate: \"2024-04-15\"\ncategories: [cultura]\nimage: \"images.jpg\"\nformat: \n  html:\n    toc: true #arma menu\n    code-fold: true #oculta el codigo\n    code-summary: \"Ver código\" #leyenda para mostrar codigo\n---\n\n\n## **Explorando Netflix**\n\n![](netflix-logo.jpg)\n\nA continuación veremos algunas técnicas de análisis exploratorio utilizando un dataset muy intersante que contiene productos de Netflix con sus respectivas variables. El dataset puede encontrarse en el [sitio](https://www.kaggle.com/shivamb/netflix-shows) de kaggle.\n\nVamos a trabajar con las librerías [tidyverse](https://www.tidyverse.org/) , [lubridate](https://lubridate.tidyverse.org/) y [kableExtra](https://haozhu233.github.io/kableExtra/)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Limpiamos ambiente de trabajo\n\nrm(list = ls())\n\n#Instalamos Librerías\n\nlibrary(tidyverse)\nlibrary(\"tidytext\")\nlibrary(lubridate)\nlibrary(kableExtra)\n\n#Leemos los datos\n\nBase <- read_csv(file = \"data/netflix_titles.csv\")\n```\n:::\n\n\n# Limpieza y creación de objetos auxiliares\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Limpiamos columnas\n\nBase$rating <- as.factor(Base$rating)\nBase$date_added <- mdy(Base$date_added)\nBase$Año <- year(Base$date_added)\nBase$show_id <- NULL\n\n#generamos objetos auxiliares para texto dinámico\n\nDesde <- Base %>% \n  select(date_added) %>% \n  arrange(date_added) %>% \n  head(1) %>% \n  pull()\n\nHasta <- Base %>% \n  select(date_added) %>% \n  arrange(desc(date_added)) %>% \n  head(1) %>% \n  pull()\n\ncantidad <- nrow(Base)\n```\n:::\n\n\nLa Base contiene 7787 productos de Netflix emitidos desde 2008-01-01 hasta 2021-01-16. Veamos como es la distribución por el tipo de show.\n\n# Series vs Películas\n\n\n::: {.cell}\n\n```{.r .cell-code}\nTabla_1 <- Base %>% \n  select(type) %>% \n  group_by(type) %>% \n  summarise(Total = n()) %>% \n  mutate(Porcentaje = round(Total/sum(Total)*100,2)) %>% \n  mutate(Etiqueta = paste0(Total, \" ( % \", Porcentaje, \")\"))\n\nggplot(Tabla_1, aes(x = \"\" , y = Total, fill = type ))+\n  geom_bar(stat = \"identity\", width = 0.5)+\n  geom_text(aes(label = Etiqueta), position = position_stack(vjust = 0.5))+\n  scale_fill_manual(values = c(\"#f55951\", \"#f1e8e6\"))+\n    labs(title = paste0(\"Dataset Netflix \",Desde, \" - \", Hasta),\n       subtitle = \"Tipos de Productos\",\n       caption = \"Fuente: Kaggle\",\n       x = \"\",\n       y = \"\")+\n  theme_minimal()+\n  theme(text = element_text(color = \"grey20\"),\n        plot.title = element_text(hjust = 0.5, vjust = 0.5),\n        plot.subtitle = element_text( hjust = 0.5, vjust = 0.5),\n        legend.position = \"bottom\",\n        legend.title = element_blank())+\n  guides(fill = guide_legend(reverse = TRUE))+\n  coord_flip()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nPuede verse que la proporción mayoritaria está compuesta por películas. Veamos como  fue la evolución de esta segmentación.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nTabla_2 <- Base %>% \n  select(Año,type) %>%\n  filter(!is.na(Año)) %>%\n  filter(Año %in% c(2017:2020)) %>%\n  group_by(Año,type) %>% \n  summarise(Total = n()) %>% \n  mutate(Porcentaje = round(Total/sum(Total)*100,2)) %>% \n  mutate(Etiqueta = paste0(Total, \" ( % \", Porcentaje, \")\"))\n\n\nTablaaux <- Tabla_2 %>% \n  select(Año) %>% \n  filter(!duplicated(Año))\n\nfilas <- nrow(Tablaaux)\n\nggplot(Tabla_2, aes(x = \"\" , y = Total, fill = type ))+\n  geom_bar(stat = \"identity\", width = 1)+\n  geom_text(aes(label = Etiqueta), position = position_stack(vjust = 0.5), size =2.5)+\n  scale_fill_manual(values = c(\"#f55951\", \"#f1e8e6\"))+\n    labs(title = paste0(\"Dataset Netflix \",Desde, \" - \", Hasta),\n       subtitle = \"Tipos de Productos\",\n       caption = \"Fuente: Kaggle\",\n       x = \"\",\n       y = \"\")+\n  theme_minimal()+\n  theme(plot.title = element_text(hjust = 0.5, vjust = 0.5),\n        plot.subtitle = element_text( hjust = 0.5, vjust = 0.5),\n        legend.position = \"bottom\",\n        legend.title = element_blank())+\n  guides(fill = guide_legend(reverse = TRUE))+\n  coord_flip()+\n  facet_wrap(~Año, nrow = filas)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\nPuede apreciarse un significativo crecimiento de la proporción de la oferta dedicada a las series. Veamos como se resuelve esta dicotomía al enfrentar las proporciones con la variable pais de origen. \nDado que la variable \"country\" puede contener varios paises debido a coproducciones, puede resultar util generar un nuevo dataframe con todos los paises por separado. \nLuego, elaboraremos una nueva tabla que contenga las cifras de cada tipo de producción junto con el porcentaje que representa al interior de cada país. Estos son los 10 paises que encabezan el ranking\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npaises <- strsplit(Base$country, split = \", \")\npaises_split <- data.frame(tipo = rep(Base$type, sapply(paises, length)), paises = unlist(paises))\n\npaises_split$paises <- gsub(\",\",\"\",paises_split$paises)\n\nprod_por_pais <- paises_split %>% \n  filter(!is.na(paises)) %>%\n  group_by(paises,tipo) %>% \n  summarise(total = n()) %>% \n  arrange(desc(total)) %>% \n  mutate(tipo = case_when(tipo == \"Movie\" ~ \"Peliculas\",\n                           tipo == \"TV Show\" ~ \"TV\"))\n\n\n\nprod_por_pais_spread <- prod_por_pais %>% \n  spread(.,tipo,total) %>%\n  mutate_all(.,~replace(.,is.na(.),0)) %>% \n  mutate(Total = Peliculas + TV) %>% \n  mutate(Porc_Peliculas = round(Peliculas/Total*100,2)) %>% \n  mutate(Porc_TV = round(TV/Total*100,2)) %>% \n  mutate(Etiqueta_Peliculas = paste0(Peliculas, \" ( % \", Porc_Peliculas, \")\")) %>% \n  mutate(Etiqueta_TV = paste0(TV, \" ( % \", Porc_TV, \")\")) %>% \n  arrange(desc(Total))\n  \nTabla_3 <- prod_por_pais_spread %>% \n  select(paises,Etiqueta_Peliculas,Etiqueta_TV,Total) %>%\n  head(10)\n  \n#HACER TABLA CON KABLE\n\nkable(Tabla_3,align = \"l\",digits = 3,col.names = c(\"Paises\",\"Películas\",\"TV Show\",\"Total\"))%>% \n        column_spec(1, bold = TRUE, color = \"#f55951\") %>%\n  row_spec(0,background = \"#f55951\", color = \"white\") %>% \n  add_header_above(c(\" \" = 1,\n                     \"Tipo de Productos\"= 2,\n                     \" \" =1)) %>% \n  kable_minimal()\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\" lightable-minimal\" style='font-family: \"Trebuchet MS\", verdana, sans-serif; margin-left: auto; margin-right: auto;'>\n <thead>\n<tr>\n<th style=\"empty-cells: hide;border-bottom:hidden;\" colspan=\"1\"></th>\n<th style=\"border-bottom:hidden;padding-bottom:0; padding-left:3px;padding-right:3px;text-align: center; \" colspan=\"2\"><div style=\"border-bottom: 1px solid #ddd; padding-bottom: 5px; \">Tipo de Productos</div></th>\n<th style=\"empty-cells: hide;border-bottom:hidden;\" colspan=\"1\"></th>\n</tr>\n  <tr>\n   <th style=\"text-align:left;color: white !important;background-color: #f55951 !important;\"> Paises </th>\n   <th style=\"text-align:left;color: white !important;background-color: #f55951 !important;\"> Películas </th>\n   <th style=\"text-align:left;color: white !important;background-color: #f55951 !important;\"> TV Show </th>\n   <th style=\"text-align:left;color: white !important;background-color: #f55951 !important;\"> Total </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;font-weight: bold;color: #f55951 !important;\"> United States </td>\n   <td style=\"text-align:left;\"> 2431 ( % 73.73) </td>\n   <td style=\"text-align:left;\"> 866 ( % 26.27) </td>\n   <td style=\"text-align:left;\"> 3297 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;font-weight: bold;color: #f55951 !important;\"> India </td>\n   <td style=\"text-align:left;\"> 915 ( % 92.42) </td>\n   <td style=\"text-align:left;\"> 75 ( % 7.58) </td>\n   <td style=\"text-align:left;\"> 990 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;font-weight: bold;color: #f55951 !important;\"> United Kingdom </td>\n   <td style=\"text-align:left;\"> 467 ( % 64.59) </td>\n   <td style=\"text-align:left;\"> 256 ( % 35.41) </td>\n   <td style=\"text-align:left;\"> 723 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;font-weight: bold;color: #f55951 !important;\"> Canada </td>\n   <td style=\"text-align:left;\"> 286 ( % 69.42) </td>\n   <td style=\"text-align:left;\"> 126 ( % 30.58) </td>\n   <td style=\"text-align:left;\"> 412 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;font-weight: bold;color: #f55951 !important;\"> France </td>\n   <td style=\"text-align:left;\"> 265 ( % 75.93) </td>\n   <td style=\"text-align:left;\"> 84 ( % 24.07) </td>\n   <td style=\"text-align:left;\"> 349 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;font-weight: bold;color: #f55951 !important;\"> Japan </td>\n   <td style=\"text-align:left;\"> 103 ( % 35.89) </td>\n   <td style=\"text-align:left;\"> 184 ( % 64.11) </td>\n   <td style=\"text-align:left;\"> 287 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;font-weight: bold;color: #f55951 !important;\"> Spain </td>\n   <td style=\"text-align:left;\"> 158 ( % 73.49) </td>\n   <td style=\"text-align:left;\"> 57 ( % 26.51) </td>\n   <td style=\"text-align:left;\"> 215 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;font-weight: bold;color: #f55951 !important;\"> South Korea </td>\n   <td style=\"text-align:left;\"> 55 ( % 25.94) </td>\n   <td style=\"text-align:left;\"> 157 ( % 74.06) </td>\n   <td style=\"text-align:left;\"> 212 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;font-weight: bold;color: #f55951 !important;\"> Germany </td>\n   <td style=\"text-align:left;\"> 157 ( % 78.89) </td>\n   <td style=\"text-align:left;\"> 42 ( % 21.11) </td>\n   <td style=\"text-align:left;\"> 199 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;font-weight: bold;color: #f55951 !important;\"> Mexico </td>\n   <td style=\"text-align:left;\"> 101 ( % 65.58) </td>\n   <td style=\"text-align:left;\"> 53 ( % 34.42) </td>\n   <td style=\"text-align:left;\"> 154 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\nVeamos la misma información en formato gráfico:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nTabla_4.1 <- prod_por_pais %>%\n  filter(tipo == \"TV\") %>% \n  head(10)\n\nTabla_4.2 <- prod_por_pais %>%\n  filter(tipo == \"Peliculas\") %>% \n  head(10)\n\nTabla_4.3 <- rbind(Tabla_4.1,Tabla_4.2) %>% \n  mutate(tipo = as.factor(tipo),\n         paises = reorder_within(paises,total,tipo))\n\nggplot(Tabla_4.3, aes(x=fct_reorder(paises,total), y=total, fill = tipo))+\n  geom_col(show.legend = FALSE)+\n  scale_fill_manual(values = c(\"#f55951\", \"#f1e8e6\"))+\n  facet_wrap(~tipo, scales = \"free_y\")+\n  coord_flip()+\n  scale_x_reordered()+\n  scale_y_continuous(expand = c(0,0))+\n  labs(title = paste0(\"Dataset Netflix \",Desde, \"-\", Hasta),\n       subtitle = \"Distribución de productos por país\",\n       caption = \"Fuente: Kaggle\",\n       x = \"\",\n       y = \"\")+\n  theme_minimal()+\n  theme(plot.title = element_text( hjust = 0.5, vjust = 0.5),\n        plot.subtitle = element_text( hjust = 0.5, vjust = 0.5))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\nLa gráfica evidencia que Estados Unidos es el principal proovedor de contenido de la plataforma con una distancia de mayor amplitud en el caso de las peliculas, donde India supera a Gran Bretaña en el segundo lugar.\n\n\n# Duración\n\nVeamos ahora la exploración de los contenidos según la duración.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nBase$duracion <- as.numeric(str_extract(Base$duration,'[0-9]+'))\n\nggplot(Base %>% \n         filter(type == \"Movie\"),aes(x = factor(Año), y = duracion))+\n  geom_boxplot(color = \"#f55951\")+\n  labs(title = paste0(\"Dataset Netflix \",Desde, \"-\", Hasta),\n       subtitle = \"Duración de películas por año\",\n       caption = \"Fuente: Kaggle\",\n       x = \"Año\",\n       y = \"Duración (en minutos)\")+\n  theme_minimal()+\n  theme(plot.title = element_text( hjust = 0.5 , vjust = 0.5),\n        plot.subtitle = element_text( hjust = 0.5 , vjust = 0.5))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nTambien podemos mostrar la misma información a partir de un gráfico de puntos:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#| message: false\n#| warning: false\n\nBase$duracion <- as.numeric(str_extract(Base$duration,'[0-9]+'))\n\nggplot(Base %>% \n         filter(type == \"Movie\"),aes(x = factor(Año), y = duracion))+\n  geom_point(color = \"#f55951\")+\n  labs(title = paste0(\"Dataset Netflix \",Desde, \"-\", Hasta),\n       subtitle = \"Duración de series por año\",\n       caption = \"Fuente: Kaggle\",\n       x = \"Año\",\n       y = \"Duración (en cantidad de temporadas)\")+\n  theme_minimal()+\n  theme(plot.title = element_text( hjust = 0.5 , vjust = 0.5),\n        plot.subtitle = element_text( hjust = 0.5 , vjust = 0.5))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\nPara finalizar, puede resultar de gran interés analizar la cantidad de temporadas de las series y su evolución con el correr de los años, tomando en consideración su año de lanzamiento.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#| message: false\n#| warning: false\n\nBase$duracion <- as.numeric(str_extract(Base$duration,'[0-9]+'))\n\nggplot(Base %>% \n         filter(type == \"TV Show\"),aes(x = factor(release_year), y = duracion))+\n  geom_point(color = \"#f55951\")+\n  labs(title = paste0(\"Dataset Netflix \",Desde, \"-\", Hasta),\n       subtitle = \"Duración de series por año\",\n       caption = \"Fuente: Kaggle\",\n       x = \"Año\",\n       y = \"Duración (en cantidad de temporadas)\")+\n  theme_minimal()+\n  theme(plot.title = element_text( hjust = 0.5 , vjust = 0.5),\n        plot.subtitle = element_text( hjust = 0.5 , vjust = 0.5),\n        axis.text.x = element_text(angle = 90))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}